generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id             String   @id
  nome           String
  email          String   @unique
  senha          String
  data_inclusao  DateTime @default(now())
  data_alteracao DateTime @updatedAt
}

enum status_boleto {
  PENDENTE
  PAGO
  EXPIRADO
}

enum status_cobranca {
  EM_ABERTO
  VENCIDA
  PAGO
  FALHA_GERAR_BOLETO
}

enum psp {
  ITAU
}

model cobranca {
  id              Int             @id @default(autoincrement())
  valor           Int
  nome_devedor    String
  data_vencimento DateTime
  status          status_cobranca
  email           String
  data_pagamento  DateTime?
  nome_pagador    String?
  data_inclusao   DateTime        @default(now())
  data_alteracao  DateTime        @updatedAt
  boleto          boleto[]
}

model boleto {
  id              String        @id
  id_cobranca     Int
  id_psp          String
  valor           Int
  nome_devedor    String
  linha_digitavel String
  data_vencimento DateTime
  data_pagamento  DateTime?
  nome_pagador    String?
  status          status_boleto
  data_inclusao   DateTime      @default(now())
  data_alteracao  DateTime      @updatedAt
  cobranca        cobranca      @relation(fields: [id_cobranca], references: [id])
}

model cobranca_arquivo {
  id             String   @id
  caminho        String
  processado     Boolean
  data_inclusao  DateTime @default(now())
  data_alteracao DateTime @updatedAt
}

model webhook {
  id             String   @id
  payload        Json
  valor_pago     Int
  id_cobranca    String
  data_pagamento DateTime
  data_inclusao  DateTime @default(now())
  data_alteracao DateTime @updatedAt
}
