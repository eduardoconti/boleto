version: '3.7'

services:
  api:
    container_name: api
    restart: on-failure
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    volumes:
      - .:/app
    ports:
      - ${PORT}:${PORT}
    env_file:
      - .env
    command: yarn start:dev
    depends_on:
      - postgres
      - rabbitmq
    
  consumer-csv:
    container_name: consumer-csv
    restart: on-failure
    build:
      context: .
      dockerfile: ./apps/cobranca/Dockerfile
    volumes:
      - .:/app
    ports:
      - ${CONSUMER_CSV_PORT}:${CONSUMER_CSV_PORT}
    env_file:
      - .env
    command: yarn start:consumer-csv:dev
    depends_on:
      - postgres
      - rabbitmq

  consumer-webhook:
    container_name: consumer-webhook
    restart: on-failure
    build:
      context: .
      dockerfile: ./apps/webhook/Dockerfile
    volumes:
      - .:/app
    ports:
      - ${CONSUMER_WEBHOOK_PORT}:${CONSUMER_WEBHOOK_PORT}
    env_file:
      - .env
    command: yarn start:consumer-webhook:dev
    depends_on:
      - postgres
      - rabbitmq

  postgres:
    image: postgres:alpine
    ports:
      - ${DB_PORT}:${DB_PORT}
    container_name: postgres
    volumes:
      - pg-api-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: always

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    restart: always
    hostname: rabbitmq
    ports:
      - 5672:5672  
      - 15672:15672  
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  

volumes:
  pg-api-data:
  rabbitmq_data:
